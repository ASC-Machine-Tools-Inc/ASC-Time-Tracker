@page
@model Asc_Time_Tracker.Pages.TimeLogs.IndexModel

@{
    ViewData["Title"] = "Logs";
}

<div class="card main-log-card">
    <div class="row card-header">
        <div class="col-8 p-0">

            @using (Html.BeginForm("Index", "Index", FormMethod.Get,
          new { @class = "input-group" }))
            {
                <div class="input-group-prepend">
                    <label class="input-group-text" for="dateOption">Filter by</label>
                </div>
                <select id="dateOption" class="custom-select mr-2">
                    <option>Day</option>
                    <option>Week</option>
                    <option>Month</option>
                    <option>Custom Range</option>
                </select>

                <button type="button" class="btn week-prev shadow-none">
                    <i class="fas fa-arrow-left"></i>
                </button>
                <input type="text"
                       class="form-control week-picker shadow-none w-25 text-center"
                       placeholder="Select a Week">
                <button type="button" class="btn week-next shadow-none">
                    <i class="fas fa-arrow-right"></i>
                </button>
            }
        </div>
        <div class="col-4 p-0">
            <button class="btn btn-primary float-right">
                <i class="bi bi-download"></i>
                Export
            </button>
        </div>
    </div>
    <div class="row p-4">
        <!-- Logs display -->
        <div class="col-lg-6 p-0 scroll">
            @foreach (var item in Model.TimeLogs)
            {
                <div class="dropdown dropdown-mobile card-parent">
                    <div class="card log-card" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <div class="card-body px-4 py-2">
                            <div class="row log-main justify-content-between my-1">
                                <div class="col-9 text-nowrap text-truncate">
                                    @{

                                    }
                                    @Html.DisplayFor(modelItem => item.NOTES)
                                </div>
                                <div class="col-3 text-right pl-0">
                                    @{
                                        // Make the time look nice, by converting from seconds into hours and minutes.
                                        string formattedTime = (Math.Floor((item.TIME % 3600) / 60) + "").PadLeft(2, '0');
                                        formattedTime = Math.Floor(item.TIME / 3600) + ":" + formattedTime;
                                    }
                                    @Html.DisplayFor(modelItem => formattedTime)
                                </div>
                            </div>
                            <div class="row my-1">
                                <div class="col-8 pt-1 text-nowrap text-truncate">
                                    <span class="log-color">&nbsp;&nbsp;&nbsp;</span>
                                    <strong class="log-job">
                                        @Html.DisplayFor(modelItem => item.JOBNUM)
                                    </strong>
                                    <i class="bi bi-dot"></i>
                                    @Html.DisplayFor(modelItem => item.DATE)

                                    @{
                                        string formattedRD = item.RD ? "RD" : "";
                                    }
                                    <strong>
                                        @Html.DisplayFor(modelItem => formattedRD)
                                    </strong>
                                </div>
                                <div class="col-4 text-right">
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="dropdown-menu w-50" aria-labelledby="dropdownMenuButton">
                        <a class="dropdown-item" asp-page="./Edit" asp-route-id="@item.ID">
                            Edit
                        </a>
                        <a class="dropdown-item btn-delete" data-toggle="modal" data-target="#timeLogDeleteModal">
                            Delete
                        </a>
                        <!-- Hidden field for passing item ID to delete modal -->
                        <input class="input-delete" type="hidden" value="@item.ID" />
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Modals -->
<div class="modal fade" id="timeLogDeleteModal" tabindex="-1" role="dialog" aria-labelledby="timeLogDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="timeLogDeleteModalLabel">Delete this time log?</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <form method="post" asp-page-handler="Delete">
                    <input id="TimeLog_ID" name="TimeLog.ID" data-val="true" data-val-required="The ID field is required." type="hidden" />
                    <button type="submit" value="Delete" class="btn btn-danger">Yes, delete it</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="~/js/submit/deleteTimeLog.js"></script>
    <script src="~/js/ui/jobColor.js"></script>
    <script src="~/js/time/dateFilter.js"></script>

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}